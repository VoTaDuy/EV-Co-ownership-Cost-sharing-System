version: '3.8'

services:
  # === MySQL cho User service ===
  mysql-user:
    image: mysql:8.0
    container_name: mysql-user
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ev_cost_sharing_db
    ports:
      - "3307:3306"
    volumes:
      - ./mysql_data/user:/var/lib/mysql
    networks:
      - microservices-network

  # === MySQL cho Payment service ===
  mysql-payment:
    image: mysql:8.0
    container_name: mysql-payment
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: payment_costsharing_service
    ports:
      - "3309:3306"
    volumes:
      - ./mysql_data/payment:/var/lib/mysql
    networks:
      - microservices-network

  # === MySQL cho Booking Usage service ===
  mysql-booking:
    image: mysql:8.0
    container_name: mysql-booking
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: booking_usage_service
      MYSQL_USER: booking_user
      MYSQL_PASSWORD: 123456
    ports:
      - "3308:3306"
    volumes:
      - ./mysql_data/booking:/var/lib/mysql
    networks:
      - microservices-network

  # === PostgreSQL cho Admin & Staff service ===
  postgres:
    image: postgres:17
    container_name: ev-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - microservices-network

  # === MongoDB cho History & Analytics ===
  mongodb-history:
    image: mongo:6
    container_name: mongodb-history
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./mongo_data:/data/db
    networks:
      - microservices-network

  # === User & Ownership (Spring Boot) ===
  user-service:
    build:
      context: ./user-and-ownership-service
      dockerfile: Dockerfile
    container_name: user-service
    restart: always
    depends_on:
      - mysql-user
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-user:3307/ev_cost_sharing_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SERVER_PORT: 8080
    ports:
      - "8080:8080"
    networks:
      - microservices-network

  # === Payment & Costsharing (Spring Boot) ===
  # === Payment & Costsharing (Spring Boot) ===
  payment-service:
    build:
      context: ./payment-cosstsharing-service
      dockerfile: dockerfile
    container_name: payment-service
    restart: always
    depends_on:
      - mysql-payment
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-payment:3306/payment_costsharing_service?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 123456
      SERVER_PORT: 8081
    ports:
      - "8081:8081"
    networks:
      - microservices-network

  # === Booking / Usage (NestJS) ===
  booking-usage-service:
    build:
      context: ./booking-usage-service
    container_name: booking-usage-service
    restart: always
    depends_on:
      - mysql-booking
    environment:
      DB_HOST: mysql-booking
      DB_PORT: 3306
      DB_USER: booking_user
      DB_PASS: 123456
      DB_NAME: booking_usage_service
      PORT: 5001
    ports:
      - "5001:5001"
    volumes:
      - ./booking-usage-service:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev
    networks:
      - microservices-network

  # === Admin & Staff (NestJS + PostgreSQL) ===
  admin-and-staff-service:
    build:
      context: ./admin-and-staff-service
    container_name: admin-and-staff-service
    restart: always
    depends_on:
      - postgres
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: postgres
      DATABASE_PASSWORD: 123456
      DATABASE_NAME: postgres
      PORT: 3000
    ports:
      - "3001:3000"
    networks:
      - microservices-network

  # === History & Analytics (Spring Boot + MongoDB) ===
  history-service:
    build:
      context: ./history-analytics-service
      dockerfile: Dockerfile
    container_name: history-service
    restart: always
    depends_on:
      - mongodb-history
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongodb-history:27017/mydb
      SERVER_PORT: 8083
    ports:
      - "8083:8083"
    networks:
      - microservices-network

  # === API Gateway (Spring Cloud Gateway) ===
  api-gateway:
    build:
      context: ./Api-Gateway
      dockerfile: DockerFile
    container_name: api-gateway
    restart: always
    depends_on:
      - user-service
      - payment-service
      - booking-usage-service
      - admin-and-staff-service
      - history-service
    ports:
      - "8085:8085"
    networks:
      - microservices-network

# === Mạng & Volume dùng chung ===
networks:
  microservices-network:
    driver: bridge

volumes:
  mysql_data_user:
  mysql_data_payment:
  mysql_data_booking:
  pgdata:
  mongo_data:
